name: CI/CD

on:
  push:
    branches:
      - main


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # application.yml 파일 생성
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{secrets.APPLICATION}}" > ./src/main/resources/application.properties
      - run: echo "spring.cloud.aws.credentials.access-key=${{secrets.AWS_ACTION_ACCESS_KEY}}" >> ./src/main/resources/application.properties
      - run: echo "spring.cloud.aws.credentials.secret-key=${{secrets.AWS_ACTION_SECRET_ACCESS_KEY}}" >> ./src/main/resources/application.properties


      # 생성된 파일들을 아티팩트로 업로드
      - uses: actions/upload-artifact@v4
        with:
          name: application.properties
          path: ./src/main/resources/application.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      # 배포용 패키지 경로 설정
      - name: Set artifact path
        run: |
          artifact=$(ls ./build/libs/*.jar | head -n 1)
          echo "artifact=$artifact" >> $GITHUB_ENV

      # 빈스토크 배포
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          application_name: mallangs-web
          environment_name: Mallangs-web-env
          version_label: github-action-${{ steps.current-time.outputs.time }}
          region: ap-northeast-2
          deployment_package: ${{ env.artifact }}

